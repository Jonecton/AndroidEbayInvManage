// Generated by view binder compiler. Do not edit!
package com.example.ebayapiproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ebayapiproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText brandInput;

  @NonNull
  public final EditText costInput;

  @NonNull
  public final EditText sizeInput;

  @NonNull
  public final EditText titleInput;

  @NonNull
  public final Spinner typeSpinner;

  private DialogAddItemBinding(@NonNull LinearLayout rootView, @NonNull EditText brandInput,
      @NonNull EditText costInput, @NonNull EditText sizeInput, @NonNull EditText titleInput,
      @NonNull Spinner typeSpinner) {
    this.rootView = rootView;
    this.brandInput = brandInput;
    this.costInput = costInput;
    this.sizeInput = sizeInput;
    this.titleInput = titleInput;
    this.typeSpinner = typeSpinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brand_input;
      EditText brandInput = ViewBindings.findChildViewById(rootView, id);
      if (brandInput == null) {
        break missingId;
      }

      id = R.id.cost_input;
      EditText costInput = ViewBindings.findChildViewById(rootView, id);
      if (costInput == null) {
        break missingId;
      }

      id = R.id.size_input;
      EditText sizeInput = ViewBindings.findChildViewById(rootView, id);
      if (sizeInput == null) {
        break missingId;
      }

      id = R.id.title_input;
      EditText titleInput = ViewBindings.findChildViewById(rootView, id);
      if (titleInput == null) {
        break missingId;
      }

      id = R.id.type_spinner;
      Spinner typeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (typeSpinner == null) {
        break missingId;
      }

      return new DialogAddItemBinding((LinearLayout) rootView, brandInput, costInput, sizeInput,
          titleInput, typeSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
