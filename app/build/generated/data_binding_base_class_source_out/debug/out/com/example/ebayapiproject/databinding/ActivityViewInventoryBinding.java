// Generated by view binder compiler. Do not edit!
package com.example.ebayapiproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TableLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ebayapiproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewInventoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addItemButton;

  @NonNull
  public final Spinner filterSpinner;

  @NonNull
  public final TableLayout inventoryTable;

  @NonNull
  public final Button removeButton;

  @NonNull
  public final EditText searchBar;

  @NonNull
  public final Button sortButton;

  private ActivityViewInventoryBinding(@NonNull LinearLayout rootView,
      @NonNull Button addItemButton, @NonNull Spinner filterSpinner,
      @NonNull TableLayout inventoryTable, @NonNull Button removeButton,
      @NonNull EditText searchBar, @NonNull Button sortButton) {
    this.rootView = rootView;
    this.addItemButton = addItemButton;
    this.filterSpinner = filterSpinner;
    this.inventoryTable = inventoryTable;
    this.removeButton = removeButton;
    this.searchBar = searchBar;
    this.sortButton = sortButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewInventoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewInventoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_inventory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewInventoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_item_button;
      Button addItemButton = ViewBindings.findChildViewById(rootView, id);
      if (addItemButton == null) {
        break missingId;
      }

      id = R.id.filter_spinner;
      Spinner filterSpinner = ViewBindings.findChildViewById(rootView, id);
      if (filterSpinner == null) {
        break missingId;
      }

      id = R.id.inventory_table;
      TableLayout inventoryTable = ViewBindings.findChildViewById(rootView, id);
      if (inventoryTable == null) {
        break missingId;
      }

      id = R.id.remove_button;
      Button removeButton = ViewBindings.findChildViewById(rootView, id);
      if (removeButton == null) {
        break missingId;
      }

      id = R.id.search_bar;
      EditText searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.sort_button;
      Button sortButton = ViewBindings.findChildViewById(rootView, id);
      if (sortButton == null) {
        break missingId;
      }

      return new ActivityViewInventoryBinding((LinearLayout) rootView, addItemButton, filterSpinner,
          inventoryTable, removeButton, searchBar, sortButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
