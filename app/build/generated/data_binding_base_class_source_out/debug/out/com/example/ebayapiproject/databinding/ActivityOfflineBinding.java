// Generated by view binder compiler. Do not edit!
package com.example.ebayapiproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ebayapiproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOfflineBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAddListing;

  @NonNull
  public final Button btnEditListing;

  @NonNull
  public final Button btnMessages;

  @NonNull
  public final Button btnSearchEbay;

  @NonNull
  public final Button btnViewCurrentListings;

  @NonNull
  public final Button btnViewInventory;

  private ActivityOfflineBinding(@NonNull LinearLayout rootView, @NonNull Button btnAddListing,
      @NonNull Button btnEditListing, @NonNull Button btnMessages, @NonNull Button btnSearchEbay,
      @NonNull Button btnViewCurrentListings, @NonNull Button btnViewInventory) {
    this.rootView = rootView;
    this.btnAddListing = btnAddListing;
    this.btnEditListing = btnEditListing;
    this.btnMessages = btnMessages;
    this.btnSearchEbay = btnSearchEbay;
    this.btnViewCurrentListings = btnViewCurrentListings;
    this.btnViewInventory = btnViewInventory;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOfflineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOfflineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_offline, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOfflineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_listing;
      Button btnAddListing = ViewBindings.findChildViewById(rootView, id);
      if (btnAddListing == null) {
        break missingId;
      }

      id = R.id.btn_edit_listing;
      Button btnEditListing = ViewBindings.findChildViewById(rootView, id);
      if (btnEditListing == null) {
        break missingId;
      }

      id = R.id.btn_messages;
      Button btnMessages = ViewBindings.findChildViewById(rootView, id);
      if (btnMessages == null) {
        break missingId;
      }

      id = R.id.btn_search_ebay;
      Button btnSearchEbay = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchEbay == null) {
        break missingId;
      }

      id = R.id.btn_view_current_listings;
      Button btnViewCurrentListings = ViewBindings.findChildViewById(rootView, id);
      if (btnViewCurrentListings == null) {
        break missingId;
      }

      id = R.id.btn_view_inventory;
      Button btnViewInventory = ViewBindings.findChildViewById(rootView, id);
      if (btnViewInventory == null) {
        break missingId;
      }

      return new ActivityOfflineBinding((LinearLayout) rootView, btnAddListing, btnEditListing,
          btnMessages, btnSearchEbay, btnViewCurrentListings, btnViewInventory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
